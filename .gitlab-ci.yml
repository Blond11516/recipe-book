image: hexpm/elixir:1.14.0-erlang-25.0.4-debian-bullseye-20220801-slim

stages:
  - validate
  - deploy

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_PIPELINE_SOURCE == "push"
      when: never

variables:
  MIX_ENV: test

.compiled:
  interruptible: true
  before_script:
    - mix local.rebar --force
    - mix local.hex --force
    - apt update
    # Required for exqlite
    - apt install -y make gcc musl
    - ln -s /usr/lib/x86_64-linux-musl/libc.so /lib/libc.musl-x86_64.so.1
    - mix deps.get
    - mix compile --all-warnings --warning-as-errors
  cache:
    paths:
      - _build/
      - deps/

.dependencies-checks:
  rules:
    - if: $DEPENDENCIES_CHECKS == "true"

retired_deps:
  extends:
    - .compiled
    - .dependencies-checks
  stage: validate
  script:
    - mix hex.audit

unused_deps:
  extends:
    - .compiled
    - .dependencies-checks
  stage: validate
  script:
    - mix deps.unlock --check-unused

security_audit:
  extends:
    - .compiled
    - .dependencies-checks
  stage: validate
  script:
    # Required for advisories repository synchronisation
    - apt install -y git
    - mix deps.audit

check_formatted:
  extends: .compiled
  stage: validate
  script:
    - mix format --check-formatted

verify_migrations_rollback:
  extends: .compiled
  stage: validate
  rules:
    - changes:
        - priv/repo/migrations/*
  script:
    - mix ecto.create && mix ecto.migrate && mix ecto.rollback --all

credo:
  extends: .compiled
  stage: validate
  script:
    - mix credo --strict

dialyzer:
  extends: .compiled
  stage: validate
  script:
    - mix dialyzer

sobelow:
  extends: .compiled
  stage: validate
  script:
    - mix sobelow --config

playwright:
  extends: .compiled
  stage: validate
  variables:
    MIX_ENV: dev
    PLAYWRIGHT_BROWSERS_PATH: 0
  script:
    - mix ecto.setup
    - elixir --erl "-detached" -S mix phx.server
    - apt install -y curl software-properties-common
    - curl -sL https://deb.nodesource.com/setup_18.x | bash -
    - apt install -y nodejs
    - npm i -g yarn
    - cd e2e-tests
    - yarn
    - yarn playwright install --with-deps chromium
    - yarn playwright test
  cache:
    key: cypress
    paths:
      - _build/
      - deps/
      - e2e-tests/node_modules/

deploy:
  image: alpine:3.16.2
  stage: deploy
  interruptible: true
  environment: production
  variables:
    FLY_API_TOKEN: $FLY_API_TOKEN
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: manual
  before_script:
    - apk add curl
    - curl -L https://fly.io/install.sh | sh
    - export FLYCTL_INSTALL="/root/.fly"
    - export PATH="$FLYCTL_INSTALL/bin:$PATH"
  script:
    - fly deploy --remote-only
